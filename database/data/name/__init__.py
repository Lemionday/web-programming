from typing import Any
from faker.providers.person import Provider as NameProvider
from collections import OrderedDict
import rstr


class Provider(NameProvider):
    first_names = OrderedDict(
        [
            ("Nguyễn", 38.4),
            ("Trần", 12.1),
            ("Lê", 9.5),
            ("Phạm", 7),
            ("Hoàng", 5.1),
            ("Phan", 4.5),
            ("Vũ", 3.9),
            ("Đặng", 2.1),
            ("Bùi", 2),
            ("Đỗ", 1.4),
            ("Hồ", 1.3),
            ("Ngô", 1.3),
            ("Dương", 1),
            ("Lý", 0.5),
        ]
    )

    middle_names_1 = (
        "Thị",
        "Văn",
        "Phúc",
        "Lộc",
        "Thọ",
        "Đoan",
        "Trang",
        "Tuyết",
        "Trinh",
        "Hiền",
        "Thương",
        "Hùng",
        "Dũng",
        "Bảo",
        "Trân",
        "Trọng",
        "Châu",
        "Hồng",
        "Lan",
        "Huệ",
        "Loan",
        "Phụng",
        "Sơn Ca",
        "An",
        "Anh",
        "Bách",
        "Bằng",
        "Bảo",
        "Bình",
        "Chân",
        "Châu",
        "Cương",
        "Cường",
        "Đại",
        "Dàng",
        "Danh",
        "Đào",
        "Đát",
        "Đạt",
        "Dây",
        "Dĩ",
        "Diễm",
        "Dinh",
        "Đông",
        "Đức",
        "Dũng",
        "Dương",
        "Duy",
        "Duyên",
        "Giang",
        "Hà",
        "Hạ",
        "Hải",
        "Hằng",
        "Hậu",
        "Hiền",
        "Hiển",
        "Hiếu",
        "Hiệu",
        "Hoa",
        "Hoài",
        "Hoàng",
        "Hoanh",
        "Hợp",
        "Huân",
        "Huệ",
        "Hùng",
        "Hưng",
        "Huy",
        "Huỳnh",
        "Kha",
        "Khang",
        "Khanh",
        "Khoa",
        "Khôi",
        "Kiên",
        "Kiều",
        "Lạc",
        "Lâm",
        "Lân",
        "Lệ",
        "Liên",
        "Linh",
        "Lợi",
        "Long",
        "Ly",
        "Lý",
        "Mai",
        "Mạnh",
        "Minh",
        "Mụi",
        "My",
        "Nam",
        "Ngân",
        "Nghĩa",
        "Ngọc",
        "Nguyện",
        "Nguyệt",
        "Nhã",
        "Nhi",
        "Như",
        "Nhung",
        "Oanh",
        "Phát",
        "Phi",
        "Phong",
        "Phú",
        "Phúc",
        "Phương",
        "Quân",
        "Quang",
        "Quốc",
        "Quyên",
        "Quỳnh",
        "Sách",
        "Sang",
        "Sơn",
        "Sung",
        "Tài",
        "Tâm",
        "Tạo",
        "Thái",
        "Thắm",
        "Thăng",
        "Thanh",
        "Thành",
        "Thảo",
        "Thế",
        "Thiện",
        "Thơ",
        "Thoa",
        "Thông",
        "Thu",
        "Thư",
        "Thuận",
        "Thương",
        "Thúy",
        "Thùy",
        "Thủy",
        "Thy",
        "Tiến",
        "Tín",
        "Tính",
        "Tình",
        "Trà",
        "Trâm",
        "Trân",
        "Trang",
        "Trạng",
        "Tri",
        "Trí",
        "Trịnh",
        "Trúc",
        "Trung",
        "Trương",
        "Trường",
        "Tứ",
        "Tuấn",
        "Tùng",
        "Tuyền",
        "Tuyết",
        "Uyên",
        "Văn",
        "Vĩ",
        "Vinh",
        "Vũ",
        "Vui",
        "Vy",
        "Vỹ",
        "Xương",
        "Yến",
    )

    formats = ("{{first_name}} {{last_name}}",)

    name_length = OrderedDict(
        [
            (2, 0.64),
            (3, 0.35),
            (1, 0.01),
        ]
    )

    def first_name(self) -> str:
        return self.random_element(self.first_names)

    def last_name(self) -> str:
        length = self.random_elements(self.name_length, length=1, use_weighting=True)[0]
        return " ".join(
            self.random_elements(self.middle_names_1, length=length, unique=True)
        )

    def phonenumber(self) -> str:
        return rstr.xeger(r"0[0-9]{10}")
